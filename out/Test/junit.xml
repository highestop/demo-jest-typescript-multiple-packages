<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="18" failures="0" errors="0" time="4.054">
  <testsuite name="redux" errors="0" failures="0" skipped="0" timestamp="2022-02-23T16:45:17" time="2.343" tests="1">
    <testcase classname="redux should dispatch action" name="redux should dispatch action" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="[index]" errors="0" failures="0" skipped="0" timestamp="2022-02-23T16:45:17" time="2.354" tests="1">
    <testcase classname="[index] given/arrange when/act then/assert" name="[index] given/arrange when/act then/assert" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2022-02-23T16:45:17" time="2.367" tests="1">
    <testcase classname=" use jsdom in this test file" name=" use jsdom in this test file" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="TestEvents" errors="0" failures="0" skipped="0" timestamp="2022-02-23T16:45:17" time="2.483" tests="2">
    <testcase classname="TestEvents increments counter" name="TestEvents increments counter" time="0.059">
    </testcase>
    <testcase classname="TestEvents decrements counter" name="TestEvents decrements counter" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Button" errors="0" failures="0" skipped="0" timestamp="2022-02-23T16:45:17" time="2.418" tests="2">
    <testcase classname="Button mount and unmount component could be updated and unmounted without errors" name="Button mount and unmount component could be updated and unmounted without errors" time="0.078">
    </testcase>
    <testcase classname="Button renders correctly" name="Button renders correctly" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="TestReduxInComponent" errors="0" failures="0" skipped="0" timestamp="2022-02-23T16:45:17" time="2.57" tests="11">
    <testcase classname="TestReduxInComponent checks initial state is equal to 0" name="TestReduxInComponent checks initial state is equal to 0" time="0.032">
    </testcase>
    <testcase classname="TestReduxInComponent increments the counter through redux" name="TestReduxInComponent increments the counter through redux" time="0.011">
    </testcase>
    <testcase classname="TestReduxInComponent decrements the counter through redux" name="TestReduxInComponent decrements the counter through redux" time="0.007">
    </testcase>
    <testcase classname="TestReduxStateInHook checks initial state is equal to 0" name="TestReduxStateInHook checks initial state is equal to 0" time="0.009">
    </testcase>
    <testcase classname="TestReduxStateInHook increments the counter through redux" name="TestReduxStateInHook increments the counter through redux" time="0.003">
    </testcase>
    <testcase classname="TestReduxStateInHook decrements the counter through redux" name="TestReduxStateInHook decrements the counter through redux" time="0.003">
    </testcase>
    <testcase classname="TestReduxStateOnly initial counter to be 0" name="TestReduxStateOnly initial counter to be 0" time="0">
    </testcase>
    <testcase classname="TestReduxStateOnly increment action can increase counter" name="TestReduxStateOnly increment action can increase counter" time="0">
    </testcase>
    <testcase classname="TestReduxStateOnly decrement action can decrease counter" name="TestReduxStateOnly decrement action can decrease counter" time="0">
    </testcase>
    <testcase classname="TestReduxReducerOnly increment action can increase counter" name="TestReduxReducerOnly increment action can increase counter" time="0.001">
    </testcase>
    <testcase classname="TestReduxReducerOnly decrement action can decrease counter" name="TestReduxReducerOnly decrement action can decrease counter" time="0">
    </testcase>
  </testsuite>
</testsuites>